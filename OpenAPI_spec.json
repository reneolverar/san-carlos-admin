{
	"openapi": "3.0.0",
	"info": {
		"title": "Express API with Swagger",
		"version": "1.0.0",
		"description": "API documentation for the Express application"
	},
	"servers": [
		{
			"url": "http://localhost:5050/api"
		}
	],
	"components": {
		"schemas": {
			"Articulo": {
				"type": "object",
				"required": [
					"tipoId",
					"marcaId",
					"nombre",
					"presentacion",
					"unidadEntradaId",
					"cantidadPorPieza",
					"unidadSalidaId"
				],
				"properties": {
					"id": {
						"type": "string",
						"description": "Autogenerated ID"
					},
					"tipoId": {
						"type": "string",
						"description": "Tipo"
					},
					"marcaId": {
						"type": "string",
						"description": "Marca"
					},
					"nombre": {
						"type": "string",
						"description": "Nombre"
					},
					"presentacion": {
						"type": "string",
						"description": "Presentacion"
					},
					"unidadEntradaId": {
						"type": "string",
						"description": "UnidadEntrada"
					},
					"cantidadPorPieza": {
						"type": "integer",
						"format": "int32",
						"description": "CantidadPorPieza"
					},
					"unidadSalidaId": {
						"type": "string",
						"description": "UnidadSalida"
					},
					"fechaInventarioInicial": {
						"type": "string",
						"description": "FechaInventarioInicial"
					},
					"inventarioInicial": {
						"type": "integer",
						"format": "int32",
						"description": "InventarioInicial"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time",
						"description": "The date and time when created."
					},
					"updatedAt": {
						"type": "string",
						"format": "date-time",
						"description": "The date and time when last updated."
					}
				},
				"example": {
					"id": "abcdefg",
					"tipoId": "101 Abarrotes",
					"marcaId": "Carbonell",
					"nombre": "Aceite",
					"presentacion": "1L",
					"unidadEntradaId": "Botella",
					"cantidadPorPieza": 1,
					"unidadSalidaId": "Botella",
					"fechaInventarioInicial": "2022-01-01T00:00:00Z",
					"inventarioInicial": 100,
					"createdAt": "2022-01-01T00:00:00Z",
					"updatedAt": "2022-01-01T00:00:00Z"
				}
			},
			"Empleado": {
				"type": "object",
				"required": ["nombre", "negocio", "activo"],
				"properties": {
					"id": {
						"type": "string",
						"description": "Autogenerated ID"
					},
					"nombre": {
						"type": "string",
						"description": "Nombre"
					},
					"negocio": {
						"type": "string",
						"description": "Negocio"
					},
					"posicion": {
						"type": "string",
						"description": "Posici√≥n"
					},
					"activo": {
						"type": "boolean",
						"description": "Is active?"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time",
						"description": "The date and time when created."
					},
					"updatedAt": {
						"type": "string",
						"format": "date-time",
						"description": "The date and time when last updated."
					}
				},
				"example": {
					"id": "abcdefg",
					"nombre": "John Doe",
					"negocio": "Bodega",
					"posicion": "Cajero",
					"activo": true,
					"createdAt": "2022-01-01T00:00:00Z",
					"updatedAt": "2022-01-01T00:00:00Z"
				}
			},
			"Transaccion": {
				"type": "object",
				"required": [
					"fecha",
					"turno",
					"empleadoId",
					"recibioId",
					"tiendaId",
					"articuloId",
					"cantidad",
					"precio",
					"negocioId",
					"factura",
					"venta"
				],
				"properties": {
					"id": {
						"type": "string",
						"description": "Autogenerated ID"
					},
					"fecha": {
						"type": "string",
						"format": "date-time",
						"description": "Fecha"
					},
					"turno": {
						"type": "string",
						"description": "Turno"
					},
					"empleadoId": {
						"type": "string",
						"description": "EmpleadoId"
					},
					"recibioId": {
						"type": "string",
						"description": "RecibioId"
					},
					"tienda": {
						"type": "string",
						"description": "Tienda"
					},
					"articuloId": {
						"type": "string",
						"description": "ArticuloId"
					},
					"cantidad": {
						"type": "integer",
						"format": "int32",
						"description": "Cantidad"
					},
					"precio": {
						"type": "integer",
						"format": "int32",
						"description": "Precio"
					},
					"negocioId": {
						"type": "string",
						"description": "NegocioId"
					},
					"factura": {
						"type": "boolean",
						"description": "Factura"
					},
					"venta": {
						"type": "boolean",
						"description": "Venta"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time",
						"description": "The date and time when created."
					},
					"updatedAt": {
						"type": "string",
						"format": "date-time",
						"description": "The date and time when last updated."
					}
				},
				"example": {
					"id": "abcdefg",
					"fecha": "2022-01-01T00:00:00Z",
					"turno": "T1",
					"empleadoId": "abcdefg",
					"recibioId": "abcdefg",
					"tiendaId": "abcdefg",
					"articuloId": "abcdefg",
					"cantidad": 1,
					"precio": 1,
					"negocioId": "abcdefg",
					"factura": false,
					"venta": false,
					"createdAt": "2022-01-01T00:00:00Z",
					"updatedAt": "2022-01-01T00:00:00Z"
				}
			},
			"Marca": {
				"type": "object",
				"required": ["nombre"],
				"properties": {
					"id": {
						"type": "string",
						"description": "Autogenerated ID"
					},
					"nombre": {
						"type": "string",
						"description": "Nombre"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time",
						"description": "The date and time when created."
					},
					"updatedAt": {
						"type": "string",
						"format": "date-time",
						"description": "The date and time when last updated."
					}
				},
				"example": {
					"id": "abcdefg",
					"nombre": "Abuelita",
					"createdAt": "2024-01-01T00:00:00Z",
					"updatedAt": "2024-01-01T00:00:00Z"
				}
			},
			"Negocio": {
				"type": "object",
				"required": ["nombre"],
				"properties": {
					"id": {
						"type": "string",
						"description": "Autogenerated ID"
					},
					"nombre": {
						"type": "string",
						"description": "Nombre"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time",
						"description": "The date and time when created."
					},
					"updatedAt": {
						"type": "string",
						"format": "date-time",
						"description": "The date and time when last updated."
					}
				},
				"example": {
					"id": "abcdefg",
					"nombre": "Bodega",
					"createdAt": "2024-01-01T00:00:00Z",
					"updatedAt": "2024-01-01T00:00:00Z"
				}
			},
			"Tienda": {
				"type": "object",
				"required": ["nombre"],
				"properties": {
					"id": {
						"type": "string",
						"description": "Autogenerated ID"
					},
					"nombre": {
						"type": "string",
						"description": "Nombre"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time",
						"description": "The date and time when created."
					},
					"updatedAt": {
						"type": "string",
						"format": "date-time",
						"description": "The date and time when last updated."
					}
				},
				"example": {
					"id": "abcdefg",
					"nombre": "Arteli",
					"createdAt": "2024-01-01T00:00:00Z",
					"updatedAt": "2024-01-01T00:00:00Z"
				}
			},
			"Tipo": {
				"type": "object",
				"required": ["nombre"],
				"properties": {
					"id": {
						"type": "string",
						"description": "Autogenerated ID"
					},
					"nombre": {
						"type": "string",
						"description": "Nombre"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time",
						"description": "The date and time when created."
					},
					"updatedAt": {
						"type": "string",
						"format": "date-time",
						"description": "The date and time when last updated."
					}
				},
				"example": {
					"id": "abcdefg",
					"nombre": "101 ABARROTES",
					"createdAt": "2024-01-01T00:00:00Z",
					"updatedAt": "2024-01-01T00:00:00Z"
				}
			},
			"Unidad": {
				"type": "object",
				"required": ["nombre"],
				"properties": {
					"id": {
						"type": "string",
						"description": "Autogenerated ID"
					},
					"nombre": {
						"type": "string",
						"description": "Nombre"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time",
						"description": "The date and time when created."
					},
					"updatedAt": {
						"type": "string",
						"format": "date-time",
						"description": "The date and time when last updated."
					}
				},
				"example": {
					"id": "abcdefg",
					"nombre": "Bolsa",
					"createdAt": "2024-01-01T00:00:00Z",
					"updatedAt": "2024-01-01T00:00:00Z"
				}
			}
		}
	},
	"tags": [
		{
			"name": "Negocios",
			"description": "API for negocios in the system"
		},
		{
			"name": "Empleados",
			"description": "API for empleados in the system"
		},
		{
			"name": "Articulos",
			"description": "API for articulos in the system"
		},
		{
			"name": "Transacciones",
			"description": "API for transacciones in the system"
		},
		{
			"name": "Unidades",
			"description": "API for unidades in the system"
		},
		{
			"name": "Tipos",
			"description": "API for tipos in the system"
		},
		{
			"name": "Tiendas",
			"description": "API for tiendas in the system"
		},
		{
			"name": "Marcas",
			"description": "API for marcas in the system"
		}
	],
	"paths": {
		"/articulos": {
			"get": {
				"tags": ["Articulos"],
				"summary": "Get all",
				"responses": {
					"200": {
						"description": "Returns all"
					},
					"500": {
						"description": "Internal server error"
					}
				}
			},
			"post": {
				"tags": ["Articulos"],
				"summary": "Create new",
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Articulo"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Returns the created object"
					},
					"500": {
						"description": "Internal server error"
					}
				}
			}
		},
		"/articulos/{id}": {
			"get": {
				"tags": ["Articulos"],
				"summary": "Get one by ID",
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"description": "ID",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Returns one"
					},
					"404": {
						"description": "Object doesn't exist"
					},
					"500": {
						"description": "Internal server error"
					}
				}
			},
			"patch": {
				"tags": ["Articulos"],
				"summary": "Update by ID",
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"description": "ID",
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Articulo"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Returns updated object"
					},
					"404": {
						"description": "Object doesn't exist"
					},
					"500": {
						"description": "Internal server error"
					}
				}
			},
			"delete": {
				"tags": ["Articulos"],
				"summary": "Delete by ID",
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"description": "ID",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"204": {
						"description": "Deleted successfully"
					},
					"404": {
						"description": "Object doesn't exist"
					},
					"500": {
						"description": "Internal server error"
					}
				}
			}
		},
		"/empleados": {
			"get": {
				"tags": ["Empleados"],
				"summary": "Get all",
				"responses": {
					"200": {
						"description": "Returns all"
					},
					"500": {
						"description": "Internal server error"
					}
				}
			},
			"post": {
				"tags": ["Empleados"],
				"summary": "Create new",
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Empleado"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Returns the created object"
					},
					"500": {
						"description": "Internal server error"
					}
				}
			}
		},
		"/empleados/{id}": {
			"get": {
				"tags": ["Empleados"],
				"summary": "Get one by ID",
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"description": "ID",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Returns one"
					},
					"404": {
						"description": "Object doesn't exist"
					},
					"500": {
						"description": "Internal server error"
					}
				}
			},
			"patch": {
				"tags": ["Empleados"],
				"summary": "Update by ID",
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"description": "ID",
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Empleado"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Returns updated object"
					},
					"404": {
						"description": "Object doesn't exist"
					},
					"500": {
						"description": "Internal server error"
					}
				}
			},
			"delete": {
				"tags": ["Empleados"],
				"summary": "Delete by ID",
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"description": "ID",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"204": {
						"description": "Deleted successfully"
					},
					"404": {
						"description": "Object doesn't exist"
					},
					"500": {
						"description": "Internal server error"
					}
				}
			}
		},
		"/marcas": {
			"get": {
				"tags": ["Marcas"],
				"summary": "Get all",
				"responses": {
					"200": {
						"description": "Returns all"
					},
					"500": {
						"description": "Internal server error"
					}
				}
			},
			"post": {
				"tags": ["Marcas"],
				"summary": "Create new",
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Marca"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Returns the created object"
					},
					"500": {
						"description": "Internal server error"
					}
				}
			}
		},
		"/marcas/{id}": {
			"get": {
				"tags": ["Marcas"],
				"summary": "Get one by ID",
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"description": "ID",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Returns one"
					},
					"404": {
						"description": "Object doesn't exist"
					},
					"500": {
						"description": "Internal server error"
					}
				}
			},
			"patch": {
				"tags": ["Marcas"],
				"summary": "Update by ID",
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"description": "ID",
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Marca"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Returns updated object"
					},
					"404": {
						"description": "Object doesn't exist"
					},
					"500": {
						"description": "Internal server error"
					}
				}
			},
			"delete": {
				"tags": ["Marcas"],
				"summary": "Delete by ID",
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"description": "ID",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"204": {
						"description": "Deleted successfully"
					},
					"404": {
						"description": "Object doesn't exist"
					},
					"500": {
						"description": "Internal server error"
					}
				}
			}
		},
		"/negocios": {
			"get": {
				"tags": ["Negocios"],
				"summary": "Get all",
				"responses": {
					"200": {
						"description": "Returns all"
					},
					"500": {
						"description": "Internal server error"
					}
				}
			},
			"post": {
				"tags": ["Negocios"],
				"summary": "Create new",
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Negocio"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Returns the created object"
					},
					"500": {
						"description": "Internal server error"
					}
				}
			}
		},
		"/negocios/{id}": {
			"get": {
				"tags": ["Negocios"],
				"summary": "Get one by ID",
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"description": "ID",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Returns one"
					},
					"404": {
						"description": "Object doesn't exist"
					},
					"500": {
						"description": "Internal server error"
					}
				}
			},
			"patch": {
				"tags": ["Negocios"],
				"summary": "Update by ID",
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"description": "ID",
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Negocio"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Returns updated object"
					},
					"404": {
						"description": "Object doesn't exist"
					},
					"500": {
						"description": "Internal server error"
					}
				}
			},
			"delete": {
				"tags": ["Negocios"],
				"summary": "Delete by ID",
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"description": "ID",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"204": {
						"description": "Deleted successfully"
					},
					"404": {
						"description": "Object doesn't exist"
					},
					"500": {
						"description": "Internal server error"
					}
				}
			}
		},
		"/negocios/nombre/{name}": {
			"get": {
				"tags": ["Negocios"],
				"summary": "Get one by name",
				"parameters": [
					{
						"in": "path",
						"name": "name",
						"required": true,
						"description": "Name",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Returns one"
					},
					"404": {
						"description": "Object doesn't exist"
					},
					"500": {
						"description": "Internal server error"
					}
				}
			}
		},
		"/tiendas": {
			"get": {
				"tags": ["Tiendas"],
				"summary": "Get all",
				"responses": {
					"200": {
						"description": "Returns all"
					},
					"500": {
						"description": "Internal server error"
					}
				}
			},
			"post": {
				"tags": ["Tiendas"],
				"summary": "Create new",
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Tienda"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Returns the created object"
					},
					"500": {
						"description": "Internal server error"
					}
				}
			}
		},
		"/tiendas/{id}": {
			"get": {
				"tags": ["Tiendas"],
				"summary": "Get one by ID",
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"description": "ID",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Returns one"
					},
					"404": {
						"description": "Object doesn't exist"
					},
					"500": {
						"description": "Internal server error"
					}
				}
			},
			"patch": {
				"tags": ["Tiendas"],
				"summary": "Update by ID",
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"description": "ID",
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Tienda"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Returns updated object"
					},
					"404": {
						"description": "Object doesn't exist"
					},
					"500": {
						"description": "Internal server error"
					}
				}
			},
			"delete": {
				"tags": ["Tiendas"],
				"summary": "Delete by ID",
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"description": "ID",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"204": {
						"description": "Deleted successfully"
					},
					"404": {
						"description": "Object doesn't exist"
					},
					"500": {
						"description": "Internal server error"
					}
				}
			}
		},
		"/tipos": {
			"get": {
				"tags": ["Tipos"],
				"summary": "Get all",
				"responses": {
					"200": {
						"description": "Returns all"
					},
					"500": {
						"description": "Internal server error"
					}
				}
			},
			"post": {
				"tags": ["Tipos"],
				"summary": "Create new",
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Tipo"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Returns the created object"
					},
					"500": {
						"description": "Internal server error"
					}
				}
			}
		},
		"/tipos/{id}": {
			"get": {
				"tags": ["Tipos"],
				"summary": "Get one by ID",
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"description": "ID",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Returns one"
					},
					"404": {
						"description": "Object doesn't exist"
					},
					"500": {
						"description": "Internal server error"
					}
				}
			},
			"patch": {
				"tags": ["Tipos"],
				"summary": "Update by ID",
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"description": "ID",
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Tipo"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Returns updated object"
					},
					"404": {
						"description": "Object doesn't exist"
					},
					"500": {
						"description": "Internal server error"
					}
				}
			},
			"delete": {
				"tags": ["Tipos"],
				"summary": "Delete by ID",
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"description": "ID",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"204": {
						"description": "Deleted successfully"
					},
					"404": {
						"description": "Object doesn't exist"
					},
					"500": {
						"description": "Internal server error"
					}
				}
			}
		},
		"/unidades": {
			"get": {
				"tags": ["Unidades"],
				"summary": "Get all",
				"responses": {
					"200": {
						"description": "Returns all"
					},
					"500": {
						"description": "Internal server error"
					}
				}
			},
			"post": {
				"tags": ["Unidades"],
				"summary": "Create new",
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Unidad"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Returns the created object"
					},
					"500": {
						"description": "Internal server error"
					}
				}
			}
		},
		"/unidades/{id}": {
			"get": {
				"tags": ["Unidades"],
				"summary": "Get one by ID",
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"description": "ID",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Returns one"
					},
					"404": {
						"description": "Object doesn't exist"
					},
					"500": {
						"description": "Internal server error"
					}
				}
			},
			"patch": {
				"tags": ["Unidades"],
				"summary": "Update by ID",
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"description": "ID",
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Unidad"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Returns updated object"
					},
					"404": {
						"description": "Object doesn't exist"
					},
					"500": {
						"description": "Internal server error"
					}
				}
			},
			"delete": {
				"tags": ["Unidades"],
				"summary": "Delete by ID",
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"description": "ID",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"204": {
						"description": "Deleted successfully"
					},
					"404": {
						"description": "Object doesn't exist"
					},
					"500": {
						"description": "Internal server error"
					}
				}
			}
		},
		"/transacciones": {
			"get": {
				"tags": ["Transacciones"],
				"summary": "Get all",
				"responses": {
					"200": {
						"description": "Returns all"
					},
					"500": {
						"description": "Internal server error"
					}
				}
			},
			"post": {
				"tags": ["Transacciones"],
				"summary": "Create new",
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Transaccion"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Returns the created object"
					},
					"500": {
						"description": "Internal server error"
					}
				}
			}
		},
		"/transacciones/{id}": {
			"get": {
				"tags": ["Transacciones"],
				"summary": "Get one by ID",
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"description": "ID",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Returns one"
					},
					"404": {
						"description": "Object doesn't exist"
					},
					"500": {
						"description": "Internal server error"
					}
				}
			},
			"patch": {
				"tags": ["Transacciones"],
				"summary": "Update by ID",
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"description": "ID",
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Transaccion"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Returns updated object"
					},
					"404": {
						"description": "Object doesn't exist"
					},
					"500": {
						"description": "Internal server error"
					}
				}
			},
			"delete": {
				"tags": ["Transacciones"],
				"summary": "Delete by ID",
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"description": "ID",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"204": {
						"description": "Deleted successfully"
					},
					"404": {
						"description": "Object doesn't exist"
					},
					"500": {
						"description": "Internal server error"
					}
				}
			}
		}
	}
}
